# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_CODE_DEPLOY_BUCKET: ${{bucket_name}}
      PRIVATE_KEY_PEM: ${{private_key}}
      PUBLIC_KEY: ${{public_key}}
      AWS_REGION: ${{region}}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build Artifact
        run: mvn clean install
          cd target/
          ls -al
          cd ../
          pwd
          ls -al

      - name: Zip Artifact
        run: echo "current build number is "
          pwd
          mkdir -p codedeploy_artifact
          cd codedeploy_artifact
          cp *.xml .
          cp CSYE6225_WEBAPP/target/webapp-0.0.1-SNAPSHOT.jar .
          cp CSYE6225_WEBAPP/src/main/resources/*.properties .
          zip -r csye6225-web-app.zip .
          rm *.yml *.sh *.properties *.jar
          ls -al
          pwd
          cd ..
          pwd
          ls -al
      - name: install aws
        run: yum install awscli

      - name: terraform
        run: cd aws-infra-main
          cd packer
          packer build
          cd ..
          terraform init
          terraform apply
          terraform output

      - name: Upload Artifact To S3
        run: echo "Uploading to S3 bucket"
          cd codedeploy_artifact
          aws s3 cp csye6225-webapp.zip s3://${AWS_CODE_DEPLOY_BUCKET}

      - name: Make CodeDeploy API call
        run: echo "CodeDeploy"
          aws deploy register-application-revision --region ${AWS_REGION} --application-name csye6225-webapp \
          --s3-location bucket=${AWS_CODE_DEPLOY_BUCKET},key=csye6225-webapp.zip,bundleType=zip
          echo "------------------------------------------------------"
          aws deploy list-application-revisions --region ${AWS_REGION} --application-name csye6225-webapp \
          --s-3-bucket code-deploy.csye6225-su19-sebastianc.me --deployed exclude
          echo "------------------------------------------------------"
          deploymentId=$(aws deploy create-deployment --region ${AWS_REGION} \
          --application-name csye6225-webapp \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name csye6225-webapp-deployment \
          --s3-location bucket=${AWS_CODE_DEPLOY_BUCKET},bundleType=zip,key=csye6225-webapp.zip \
          --auto-rollback-configuration enabled=true,events=DEPLOYMENT_FAILURE,DEPLOYMENT_STOP_ON_ALARM,DEPLOYMENT_STOP_ON_REQUEST)
          echo "$deploymentId"
